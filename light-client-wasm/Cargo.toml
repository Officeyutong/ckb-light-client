[package]
name = "light-client-wasm"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
wasm-bindgen = "0.2.63"
ckb-light-client-lib = { path = "../light-client-lib" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
serde_json = { version = "1" }
serde = { version = "1", features = ["derive"] }
console_error_panic_hook = { version = "0.1.6", optional = true }
wasm-bindgen-futures = "0.4"
log = "0.4"
wasm-logger = "0.2"
serde-wasm-bindgen = "0.6.5"

ckb-chain-spec = "0.121.0-rc1"
ckb-resource = "0.121.0-rc1"
ckb-network = "0.121.0-rc1"
ckb-async-runtime = "0.121.0-rc1"
ckb-types = "0.121.0-rc1"
ckb-jsonrpc-types = "0.121.0-rc1"
ckb-stop-handler = "0.121.0-rc1"
ckb-systemtime = "0.121.0-rc1"
ckb-app-config = "0.121.0-rc1"


getrandom = { version = "0.2", features = ["js"] }


[features]
default = ["console_error_panic_hook"]

# [profile.release]
# # Tell `rustc` to optimize for small code size.
# opt-level = "s"
